% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gbif_species_name_match.R
\name{gbif_species_name_match}
\alias{gbif_species_name_match}
\title{Add species information provided by the GBIF taxonomic backbone API}
\usage{
gbif_species_name_match(df, name = "name", gbif_terms = c("usageKey",
  "scientificName", "rank", "order", "matchType", "phylum", "kingdom",
  "genus", "class", "confidence", "synonym", "status", "family"), ...)
}
\arguments{
\item{df}{data.frame with species information}

\item{name}{char column name of the column containing the scientific names
used for the name matching with the GBIF taxonomic backbone. Default:
"name".}

\item{gbif_terms}{list of valid GBIF terms to add as additional columns to
the data.frame. Default: usageKey, scientificName, rank, order, matchType,
phylum, kingdom, genus, class, confidence, synonym, status, family.}

\item{...}{any parameter to pass to rgbif function \code{name_bakbone}. See
\code{?name_backbone} for more informations about.}
}
\value{
a tibble data.frame with GBIF information as additional columns.
}
\description{
This functions extends an existing dataframe with additional columns provided
by the GBIF taxonomic backbone and matched on the species scientific name,
which need to be an available column in the dataframe.
}
\details{
This function is essentially a wrapper around the existing rgbif
functionality \code{name_backbone()} and extends the application to a data.frame.
For more information on the name matching API of GBIF on which rgbif relies,
see \url{https://www.gbif.org/developer/species/#searching}.
}
\examples{
\dontrun{
library(readr)
library(dplyr)
species_list <- read_csv(paste0("https://raw.githubusercontent.com/inbo",
                                "/inbo-pyutils/master/gbif/gbif_name_match",
                                "/sample.csv"),
                         trim_ws = TRUE, col_types = cols())
# basic usage
species_list \%>\%
  gbif_species_name_match
# pass optional parameters to name_backbone
species_list \%>\%
  gbif_species_name_match(name = "name", kingdom = "kingdom", strict = TRUE)
# select GBIF terms
}
}
